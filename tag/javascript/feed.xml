<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ross-Hunter: javascript</title>
  <subtitle>Posts tagged with javascript</subtitle>
  <id>http://www.ross-hunter.com</id>
  <link href="http://www.ross-hunter.com"/>
  <link href="http://www.ross-hunter.com/tag/javascript/feed.xml" rel="self"/>
  <updated>2018-12-23T00:00:00Z</updated>
  <author>
    <name>Ross Hunter</name>
  </author>
  <entry>
    <title>Don't Test Like That!</title>
    <link rel="alternate" href="http://www.ross-hunter.com/2018/12/23/dont-test-like-that/"/>
    <id>http://www.ross-hunter.com/2018/12/23/dont-test-like-that/</id>
    <published>2018-12-23T00:00:00Z</published>
    <updated>2019-01-19T13:45:48-05:00</updated>
    <author>
      <name>Ross Hunter</name>
    </author>
    <summary type="html">As a consultant, I come across a lot of bad test suites in Rails and JavaScript apps. The following are all RSpec, Jest, or Jasmine tests that I have found in the wild – with minor changes for clarity or to protect the guilty :) (myself included!)

These are some simple things not to do, along with some advice about what to do to accomplish the same goal.

Don’t test internals in a system test

System</summary>
  </entry>
</feed>
